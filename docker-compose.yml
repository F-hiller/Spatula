version: '3.8'

services:
  postgres:
    image: postgis/postgis:15-3.4
    container_name: spatula_postgres
    environment:
      POSTGRES_USER: event_user
      POSTGRES_PASSWORD: event_password
      POSTGRES_DB: event_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgre/sql:/docker-entrypoint-initdb.d  # 초기화 스크립트 마운트
    networks:
      - event_network

  redis:
    image: redis:7
    container_name: spatula_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - event_network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: spatula_zookeeper
    environment:
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
    networks:
      - event_network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: spatula_kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_BROKER_ID: 1
      KAFKA_CLUSTER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    volumes:
      - ./docker/kafka:/var/lib/kafka/data
    networks:
      - event_network

networks:
  event_network:
    driver: bridge

volumes:
  postgres_data:
  zookeeper_data:
  redis_data: